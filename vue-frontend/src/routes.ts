// This file is automatically generated by flask-backend/routes.py, do not make changes here!!!

const API_HOST = process.env.VUE_APP_API_HOST || '';

export const api = {
    INDEX: () => `${API_HOST}/`,
    FAVICON: () => `${API_HOST}/favicon.ico`,
    CONFIG: () => `${API_HOST}/config`,
    CONFIG_PATH: () => `${API_HOST}/config/config_path`,
    CONFIG_CHECKALL: () => `${API_HOST}/config/checkall`,
    ADD_COHORT: ({cohort}) => `${API_HOST}/config/addcohort/${cohort}`,
    CONFIG_UPDATE: ({key, cohort, value}) => `${API_HOST}/config/update/${key}/${cohort}/${value}`,
    PASSWORD_CHECK: ({password}) => `${API_HOST}/password/${password}`,
    COHORT_NAMES: () => `${API_HOST}/cohort_names`,
    COLUMN_NAMES: () => `${API_HOST}/colnames`,
    PATIENT_REPORT_TABLE: ({cohort_index, patient, level, downloadmethod}) => `${API_HOST}/${cohort_index}/patient_reports/${patient}/${level}/${downloadmethod}`,
    PATIENT_REPORT_TABLE_XLSX: ({cohort_index, patients}) => `${API_HOST}/${cohort_index}/patient_reports/${patients}`,
    ENTITY_STATUS: () => `${API_HOST}/entityscore/status`,
    CORRELATION_FPKM_PROTEIN: ({cohort_index}) => `${API_HOST}/correlation/fpkmprotein/${cohort_index}`,
    ONCOKB_CNV: ({identifier, cnv_type}) => `${API_HOST}/oncokb/api/cnv/${identifier}/${cnv_type}`,
    RELOAD: () => `${API_HOST}/reload`,
    RELOAD_DB_ZSCORES: () => `${API_HOST}/reloaddbz`,
    RELOAD_DB_INTENSITY: () => `${API_HOST}/reloaddbi`,
    RELOAD_METADATA: () => `${API_HOST}/reloadmeta`,
    RELOAD_FP_INTENSITY_META: () => `${API_HOST}/reloadfpintensitymeta`,
    RELOAD_MAPPING_PROTEIN_SEQ: () => `${API_HOST}/reloadmapping`,
    RELOAD_TOPAS: () => `${API_HOST}/reloadtopass`,
    RELOAD_TRANSCRIPTS: () => `${API_HOST}/reload/transcripts`,
    RELOAD_DIGEST: () => `${API_HOST}/reload/digest`,
    RELOAD_TOPAS_ANNOTATIONS: () => `${API_HOST}/reload/topasannotations`,
    RELOAD_COHORT: ({cohort}) => `${API_HOST}/reload/${cohort}`,
    PATH_CHECK: ({path}) => `${API_HOST}/path/check/${path}`,
    ANNOTATION_MODALITY: ({cohort_index, modality}) => `${API_HOST}/annotation/${cohort_index}/${modality}`,
    VENN_PATIENT_COMPARE: ({cohort_index, pp_fp, patientslists}) => `${API_HOST}/venn/${cohort_index}/patientcompare/${pp_fp}/${patientslists}`,
    VENN_BATCH_COMPARE: ({cohort_index, pp_fp, batchlists}) => `${API_HOST}/venn/${cohort_index}/batchcompare/${pp_fp}/${batchlists}`,
    UPDATE_LOG: () => `${API_HOST}/update/logs`,
    ERROR_LOG: () => `${API_HOST}/error/logs`,
    PATIENT_CENTRIC_PP_INTENSITY: ({cohort_index, dtype}) => `${API_HOST}/patientcentric/ppintensity/${cohort_index}/${dtype}`,
    PATIENT_CENTRIC_PROTEIN_COUNTS: ({cohort_index, fp_pp}) => `${API_HOST}/patientcenteric/proteincounts/${cohort_index}/${fp_pp}`,
    TOPAS: ({cohort_index, topas_names, score_type}) => `${API_HOST}/topas/${cohort_index}/${topas_names}/${score_type}`,
    TOPAS_ANNOTATIONS: () => `${API_HOST}/topas/annotations`,
    TOPAS_LOLLIPOP: ({cohort_index, patient}) => `${API_HOST}/topas/lolipopdata/${cohort_index}/${patient}`,
    TOPAS_LOLLIPOP_TUMOR: ({cohort_index, patient}) => `${API_HOST}/topas/lolipopdata/${cohort_index}/${patient}/tumor_antigen`,
    TOPAS_EXPRESSION_DOWNSTREAM: ({cohort_index, patient}) => `${API_HOST}/topas/lolipopdata/expression/${cohort_index}/${patient}/downstream_signaling`,
    TOPAS_EXPRESSION_RTK: ({cohort_index, patient}) => `${API_HOST}/topas/lolipopdata/expression/${cohort_index}/${patient}/rtk`,
    TOPAS_IDS: ({cohort_index, categories}) => `${API_HOST}/topas/${cohort_index}/topasids/${categories}`,
    TOPAS_SUBSCORE: ({cohort_index, topasname}) => `${API_HOST}/topas/subscore/${cohort_index}/${topasname}`,
    SAMPLE_ANNOTATION: ({cohort_index}) => `${API_HOST}/${cohort_index}/sampleanot`,
    PATIENTS: ({cohort_index}) => `${API_HOST}/${cohort_index}/patients`,
    PATIENTS_GENOMICS_ANNOTATIONS: ({cohort_index, identifier}) => `${API_HOST}/${cohort_index}/patients/genomics_annotations/${identifier}`,
    PATIENTS_METADATA: ({cohort_index}) => `${API_HOST}/${cohort_index}/metadata`,
    PATIENTS_METADATA_FIELDS: ({cohort_index}) => `${API_HOST}/${cohort_index}/metadata/fields`,
    PATIENTS_METADATA_FIELD_VALUES: ({cohort_index, fieldname}) => `${API_HOST}/${cohort_index}/metadata/fields/${fieldname}`,
    PATIENTS_BY_FIELD_INTEREST: ({cohort_index, fieldname, field_interest}) => `${API_HOST}/${cohort_index}/metadata/fields/${fieldname}/patients/${field_interest}`,
    PATIENTS_ALL_ENTITIES: ({cohort_index}) => `${API_HOST}/patients/${cohort_index}/all_entities`,
    GENOMICS_IDENTIFIER: ({identifier}) => `${API_HOST}/genomics/${identifier}`,
    ONCOKB_IDENTIFIER: ({identifier}) => `${API_HOST}/oncokb/${identifier}`,
    DENSITY_FPKM: ({identifier, intensity_unit}) => `${API_HOST}/density/fpkm/${identifier}/${intensity_unit}`,
    DENSITY_PROTEIN: ({cohort_index, identifier, intensity_unit}) => `${API_HOST}/${cohort_index}/density/protein/${identifier}/${intensity_unit}`,
    IMPORTANT_PHOSPHO: ({cohort_index, identifier}) => `${API_HOST}/${cohort_index}/important_phospho/${identifier}`,
    ABUNDANCE: ({cohort_index, level, identifier, imputation, include_ref}) => `${API_HOST}/${cohort_index}/${level}/abundance/${identifier}/${imputation}/${include_ref}`,
    CORRELATION: ({cohort_index, level, level_2, identifier, intensity_unit, patients_list}) => `${API_HOST}/${cohort_index}/${level}/correlation/${level_2}/${identifier}/${intensity_unit}/${patients_list}`,
    BATCH_EFFECT: ({level, cohort_index, identifier, sample_ids, data_type}) => `${API_HOST}/batcheffect/${level}/${cohort_index}/${identifier}/${sample_ids}/${data_type}`,
    DIFFERENTIAL: ({cohort_index, level, grp1_ind, grp2_ind, y_axis_type}) => `${API_HOST}/differential/${cohort_index}/${level}/${grp1_ind}/${grp2_ind}/${y_axis_type}`,
    PROTEIN_LIST: ({cohort_index, level}) => `${API_HOST}/${cohort_index}/${level}/list`,
};